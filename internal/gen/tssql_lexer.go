// Code generated from java-escape by ANTLR 4.11.1. DO NOT EDIT.

package parser

import (
	"fmt"
	"sync"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr/v4"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type TsSqlLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var tssqllexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	channelNames           []string
	modeNames              []string
	literalNames           []string
	symbolicNames          []string
	ruleNames              []string
	predictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func tssqllexerLexerInit() {
	staticData := &tssqllexerLexerStaticData
	staticData.channelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN", "SQLCOMMENT", "ERRORCHANNEL",
	}
	staticData.modeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.literalNames = []string{
		"", "", "", "", "", "'.PROPERTY'", "'.SERVICE'", "'.EVENT'", "'FALSE'",
		"'TRUE'", "'SELECT'", "'FROM'", "'WHERE'", "'INTERVAL'", "'AND'", "'IN'",
		"'IS'", "'OR'", "'AS'", "'XOR'", "'JOIN'", "'LEFT'", "'LIKE'", "'LIMIT'",
		"'NOT'", "'*'", "'/'", "'%'", "'+'", "'-'", "'DIV'", "'MOD'", "'='",
		"'>'", "'<'", "'!'", "'~'", "'|'", "'&'", "'^'", "", "'.'", "'('", "')'",
		"','", "';'", "'@'", "'0'", "'1'", "'2'", "'''", "'\"'", "'`'", "':'",
		"", "'NULL'", "", "", "'PROPERTY'", "'SERVICE'",
	}
	staticData.symbolicNames = []string{
		"", "SPACE", "SPEC_MYSQL_COMMENT", "COMMENT_INPUT", "LINE_COMMENT",
		"DOT_PROPERTY", "DOT_SERVICE", "DOT_EVENT", "FALSE", "TRUE", "SELECT",
		"FROM", "WHERE", "INTERVAL", "AND", "IN", "IS", "OR", "AS", "XOR", "JOIN",
		"LEFT", "LIKE", "LIMIT", "NOT", "STAR", "DIVIDE", "MODULE", "PLUS",
		"MINUS", "DIV", "MOD", "EQUAL_SYMBOL", "GREATER_SYMBOL", "LESS_SYMBOL",
		"EXCLAMATION_SYMBOL", "BIT_NOT_OP", "BIT_OR_OP", "BIT_AND_OP", "BIT_XOR_OP",
		"TIME_INTERVAL", "DOT", "LR_BRACKET", "RR_BRACKET", "COMMA", "SEMI",
		"AT_SIGN", "ZERO_DECIMAL", "ONE_DECIMAL", "TWO_DECIMAL", "SINGLE_QUOTE_SYMB",
		"DOUBLE_QUOTE_SYMB", "REVERSE_QUOTE_SYMB", "COLON_SYMB", "ID", "NULL_LITERAL",
		"NULL_SPEC_LITERAL", "STRING_LITERAL", "PROPERTY", "SERVICE", "DECIMAL_LITERAL",
		"REAL_LITERAL", "ERROR_RECONGNIGION",
	}
	staticData.ruleNames = []string{
		"SPACE", "SPEC_MYSQL_COMMENT", "COMMENT_INPUT", "LINE_COMMENT", "DOT_PROPERTY",
		"DOT_SERVICE", "DOT_EVENT", "FALSE", "TRUE", "SELECT", "FROM", "WHERE",
		"INTERVAL", "AND", "IN", "IS", "OR", "AS", "XOR", "JOIN", "LEFT", "LIKE",
		"LIMIT", "NOT", "STAR", "DIVIDE", "MODULE", "PLUS", "MINUS", "DIV",
		"MOD", "EQUAL_SYMBOL", "GREATER_SYMBOL", "LESS_SYMBOL", "EXCLAMATION_SYMBOL",
		"BIT_NOT_OP", "BIT_OR_OP", "BIT_AND_OP", "BIT_XOR_OP", "TIME_INTERVAL",
		"DOT", "LR_BRACKET", "RR_BRACKET", "COMMA", "SEMI", "AT_SIGN", "ZERO_DECIMAL",
		"ONE_DECIMAL", "TWO_DECIMAL", "SINGLE_QUOTE_SYMB", "DOUBLE_QUOTE_SYMB",
		"REVERSE_QUOTE_SYMB", "COLON_SYMB", "ID", "NULL_LITERAL", "NULL_SPEC_LITERAL",
		"STRING_LITERAL", "DQUOTA_STRING", "SQUOTA_STRING", "BQUOTA_STRING",
		"PROPERTY", "SERVICE", "ID_LITERAL", "DEC_DIGIT", "DECIMAL_LITERAL",
		"REAL_LITERAL", "ERROR_RECONGNIGION",
	}
	staticData.predictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 62, 492, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57,
		7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2, 61, 7, 61, 2, 62, 7,
		62, 2, 63, 7, 63, 2, 64, 7, 64, 2, 65, 7, 65, 2, 66, 7, 66, 1, 0, 4, 0,
		137, 8, 0, 11, 0, 12, 0, 138, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
		4, 1, 148, 8, 1, 11, 1, 12, 1, 149, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
		1, 2, 1, 2, 1, 2, 5, 2, 161, 8, 2, 10, 2, 12, 2, 164, 9, 2, 1, 2, 1, 2,
		1, 2, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 3, 3, 176, 8, 3, 1, 3,
		5, 3, 179, 8, 3, 10, 3, 12, 3, 182, 9, 3, 1, 3, 3, 3, 185, 8, 3, 1, 3,
		1, 3, 3, 3, 189, 8, 3, 1, 3, 1, 3, 1, 3, 1, 3, 3, 3, 195, 8, 3, 1, 3, 1,
		3, 3, 3, 199, 8, 3, 3, 3, 201, 8, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 4,
		1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5,
		1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7,
		1, 7, 1, 7, 1, 7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9,
		1, 9, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11,
		1, 11, 1, 11, 1, 11, 1, 11, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1,
		12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1, 15,
		1, 15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18, 1,
		18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20, 1, 20, 1, 20,
		1, 20, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 1, 22, 1,
		22, 1, 22, 1, 23, 1, 23, 1, 23, 1, 23, 1, 24, 1, 24, 1, 25, 1, 25, 1, 26,
		1, 26, 1, 27, 1, 27, 1, 28, 1, 28, 1, 29, 1, 29, 1, 29, 1, 29, 1, 30, 1,
		30, 1, 30, 1, 30, 1, 31, 1, 31, 1, 32, 1, 32, 1, 33, 1, 33, 1, 34, 1, 34,
		1, 35, 1, 35, 1, 36, 1, 36, 1, 37, 1, 37, 1, 38, 1, 38, 1, 39, 4, 39, 349,
		8, 39, 11, 39, 12, 39, 350, 1, 39, 1, 39, 1, 40, 1, 40, 1, 41, 1, 41, 1,
		42, 1, 42, 1, 43, 1, 43, 1, 44, 1, 44, 1, 45, 1, 45, 1, 46, 1, 46, 1, 47,
		1, 47, 1, 48, 1, 48, 1, 49, 1, 49, 1, 50, 1, 50, 1, 51, 1, 51, 1, 52, 1,
		52, 1, 53, 1, 53, 1, 54, 1, 54, 1, 54, 1, 54, 1, 54, 1, 55, 1, 55, 1, 55,
		1, 56, 1, 56, 1, 56, 3, 56, 394, 8, 56, 1, 57, 1, 57, 1, 57, 1, 57, 1,
		57, 1, 57, 5, 57, 402, 8, 57, 10, 57, 12, 57, 405, 9, 57, 1, 57, 1, 57,
		1, 58, 1, 58, 1, 58, 1, 58, 1, 58, 1, 58, 5, 58, 415, 8, 58, 10, 58, 12,
		58, 418, 9, 58, 1, 58, 1, 58, 1, 59, 1, 59, 1, 59, 1, 59, 1, 59, 1, 59,
		5, 59, 428, 8, 59, 10, 59, 12, 59, 431, 9, 59, 1, 59, 1, 59, 1, 60, 1,
		60, 1, 60, 1, 60, 1, 60, 1, 60, 1, 60, 1, 60, 1, 60, 1, 61, 1, 61, 1, 61,
		1, 61, 1, 61, 1, 61, 1, 61, 1, 61, 1, 62, 5, 62, 453, 8, 62, 10, 62, 12,
		62, 456, 9, 62, 1, 62, 4, 62, 459, 8, 62, 11, 62, 12, 62, 460, 1, 62, 5,
		62, 464, 8, 62, 10, 62, 12, 62, 467, 9, 62, 1, 63, 1, 63, 1, 64, 4, 64,
		472, 8, 64, 11, 64, 12, 64, 473, 1, 65, 4, 65, 477, 8, 65, 11, 65, 12,
		65, 478, 3, 65, 481, 8, 65, 1, 65, 1, 65, 4, 65, 485, 8, 65, 11, 65, 12,
		65, 486, 1, 66, 1, 66, 1, 66, 1, 66, 4, 149, 162, 454, 460, 0, 67, 1, 1,
		3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23,
		12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20, 41,
		21, 43, 22, 45, 23, 47, 24, 49, 25, 51, 26, 53, 27, 55, 28, 57, 29, 59,
		30, 61, 31, 63, 32, 65, 33, 67, 34, 69, 35, 71, 36, 73, 37, 75, 38, 77,
		39, 79, 40, 81, 41, 83, 42, 85, 43, 87, 44, 89, 45, 91, 46, 93, 47, 95,
		48, 97, 49, 99, 50, 101, 51, 103, 52, 105, 53, 107, 54, 109, 55, 111, 56,
		113, 57, 115, 0, 117, 0, 119, 0, 121, 58, 123, 59, 125, 0, 127, 0, 129,
		60, 131, 61, 133, 62, 1, 0, 32, 3, 0, 9, 10, 13, 13, 32, 32, 2, 0, 9, 9,
		32, 32, 2, 0, 10, 10, 13, 13, 2, 0, 80, 80, 112, 112, 2, 0, 82, 82, 114,
		114, 2, 0, 79, 79, 111, 111, 2, 0, 69, 69, 101, 101, 2, 0, 84, 84, 116,
		116, 2, 0, 89, 89, 121, 121, 2, 0, 83, 83, 115, 115, 2, 0, 86, 86, 118,
		118, 2, 0, 73, 73, 105, 105, 2, 0, 67, 67, 99, 99, 2, 0, 78, 78, 110, 110,
		2, 0, 70, 70, 102, 102, 2, 0, 65, 65, 97, 97, 2, 0, 76, 76, 108, 108, 2,
		0, 85, 85, 117, 117, 2, 0, 77, 77, 109, 109, 2, 0, 87, 87, 119, 119, 2,
		0, 72, 72, 104, 104, 2, 0, 68, 68, 100, 100, 2, 0, 88, 88, 120, 120, 2,
		0, 74, 74, 106, 106, 2, 0, 75, 75, 107, 107, 8, 0, 68, 68, 72, 72, 77,
		77, 83, 83, 100, 100, 104, 104, 109, 109, 115, 115, 2, 0, 34, 34, 92, 92,
		2, 0, 39, 39, 92, 92, 2, 0, 92, 92, 96, 96, 6, 0, 36, 36, 48, 57, 65, 90,
		95, 95, 97, 122, 128, 65535, 5, 0, 36, 36, 65, 90, 95, 95, 97, 122, 128,
		65535, 1, 0, 48, 57, 515, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1,
		0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13,
		1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0,
		21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0,
		0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0,
		0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0,
		0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1,
		0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59,
		1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0,
		67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0,
		0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 0, 0, 0, 81, 1, 0, 0,
		0, 0, 83, 1, 0, 0, 0, 0, 85, 1, 0, 0, 0, 0, 87, 1, 0, 0, 0, 0, 89, 1, 0,
		0, 0, 0, 91, 1, 0, 0, 0, 0, 93, 1, 0, 0, 0, 0, 95, 1, 0, 0, 0, 0, 97, 1,
		0, 0, 0, 0, 99, 1, 0, 0, 0, 0, 101, 1, 0, 0, 0, 0, 103, 1, 0, 0, 0, 0,
		105, 1, 0, 0, 0, 0, 107, 1, 0, 0, 0, 0, 109, 1, 0, 0, 0, 0, 111, 1, 0,
		0, 0, 0, 113, 1, 0, 0, 0, 0, 121, 1, 0, 0, 0, 0, 123, 1, 0, 0, 0, 0, 129,
		1, 0, 0, 0, 0, 131, 1, 0, 0, 0, 0, 133, 1, 0, 0, 0, 1, 136, 1, 0, 0, 0,
		3, 142, 1, 0, 0, 0, 5, 156, 1, 0, 0, 0, 7, 200, 1, 0, 0, 0, 9, 204, 1,
		0, 0, 0, 11, 214, 1, 0, 0, 0, 13, 223, 1, 0, 0, 0, 15, 230, 1, 0, 0, 0,
		17, 236, 1, 0, 0, 0, 19, 241, 1, 0, 0, 0, 21, 248, 1, 0, 0, 0, 23, 253,
		1, 0, 0, 0, 25, 259, 1, 0, 0, 0, 27, 268, 1, 0, 0, 0, 29, 272, 1, 0, 0,
		0, 31, 275, 1, 0, 0, 0, 33, 278, 1, 0, 0, 0, 35, 281, 1, 0, 0, 0, 37, 284,
		1, 0, 0, 0, 39, 288, 1, 0, 0, 0, 41, 293, 1, 0, 0, 0, 43, 298, 1, 0, 0,
		0, 45, 303, 1, 0, 0, 0, 47, 309, 1, 0, 0, 0, 49, 313, 1, 0, 0, 0, 51, 315,
		1, 0, 0, 0, 53, 317, 1, 0, 0, 0, 55, 319, 1, 0, 0, 0, 57, 321, 1, 0, 0,
		0, 59, 323, 1, 0, 0, 0, 61, 327, 1, 0, 0, 0, 63, 331, 1, 0, 0, 0, 65, 333,
		1, 0, 0, 0, 67, 335, 1, 0, 0, 0, 69, 337, 1, 0, 0, 0, 71, 339, 1, 0, 0,
		0, 73, 341, 1, 0, 0, 0, 75, 343, 1, 0, 0, 0, 77, 345, 1, 0, 0, 0, 79, 348,
		1, 0, 0, 0, 81, 354, 1, 0, 0, 0, 83, 356, 1, 0, 0, 0, 85, 358, 1, 0, 0,
		0, 87, 360, 1, 0, 0, 0, 89, 362, 1, 0, 0, 0, 91, 364, 1, 0, 0, 0, 93, 366,
		1, 0, 0, 0, 95, 368, 1, 0, 0, 0, 97, 370, 1, 0, 0, 0, 99, 372, 1, 0, 0,
		0, 101, 374, 1, 0, 0, 0, 103, 376, 1, 0, 0, 0, 105, 378, 1, 0, 0, 0, 107,
		380, 1, 0, 0, 0, 109, 382, 1, 0, 0, 0, 111, 387, 1, 0, 0, 0, 113, 393,
		1, 0, 0, 0, 115, 395, 1, 0, 0, 0, 117, 408, 1, 0, 0, 0, 119, 421, 1, 0,
		0, 0, 121, 434, 1, 0, 0, 0, 123, 443, 1, 0, 0, 0, 125, 454, 1, 0, 0, 0,
		127, 468, 1, 0, 0, 0, 129, 471, 1, 0, 0, 0, 131, 480, 1, 0, 0, 0, 133,
		488, 1, 0, 0, 0, 135, 137, 7, 0, 0, 0, 136, 135, 1, 0, 0, 0, 137, 138,
		1, 0, 0, 0, 138, 136, 1, 0, 0, 0, 138, 139, 1, 0, 0, 0, 139, 140, 1, 0,
		0, 0, 140, 141, 6, 0, 0, 0, 141, 2, 1, 0, 0, 0, 142, 143, 5, 47, 0, 0,
		143, 144, 5, 42, 0, 0, 144, 145, 5, 33, 0, 0, 145, 147, 1, 0, 0, 0, 146,
		148, 9, 0, 0, 0, 147, 146, 1, 0, 0, 0, 148, 149, 1, 0, 0, 0, 149, 150,
		1, 0, 0, 0, 149, 147, 1, 0, 0, 0, 150, 151, 1, 0, 0, 0, 151, 152, 5, 42,
		0, 0, 152, 153, 5, 47, 0, 0, 153, 154, 1, 0, 0, 0, 154, 155, 6, 1, 1, 0,
		155, 4, 1, 0, 0, 0, 156, 157, 5, 47, 0, 0, 157, 158, 5, 42, 0, 0, 158,
		162, 1, 0, 0, 0, 159, 161, 9, 0, 0, 0, 160, 159, 1, 0, 0, 0, 161, 164,
		1, 0, 0, 0, 162, 163, 1, 0, 0, 0, 162, 160, 1, 0, 0, 0, 163, 165, 1, 0,
		0, 0, 164, 162, 1, 0, 0, 0, 165, 166, 5, 42, 0, 0, 166, 167, 5, 47, 0,
		0, 167, 168, 1, 0, 0, 0, 168, 169, 6, 2, 0, 0, 169, 6, 1, 0, 0, 0, 170,
		171, 5, 45, 0, 0, 171, 172, 5, 45, 0, 0, 172, 173, 1, 0, 0, 0, 173, 176,
		7, 1, 0, 0, 174, 176, 5, 35, 0, 0, 175, 170, 1, 0, 0, 0, 175, 174, 1, 0,
		0, 0, 176, 180, 1, 0, 0, 0, 177, 179, 8, 2, 0, 0, 178, 177, 1, 0, 0, 0,
		179, 182, 1, 0, 0, 0, 180, 178, 1, 0, 0, 0, 180, 181, 1, 0, 0, 0, 181,
		188, 1, 0, 0, 0, 182, 180, 1, 0, 0, 0, 183, 185, 5, 13, 0, 0, 184, 183,
		1, 0, 0, 0, 184, 185, 1, 0, 0, 0, 185, 186, 1, 0, 0, 0, 186, 189, 5, 10,
		0, 0, 187, 189, 5, 0, 0, 1, 188, 184, 1, 0, 0, 0, 188, 187, 1, 0, 0, 0,
		189, 201, 1, 0, 0, 0, 190, 191, 5, 45, 0, 0, 191, 192, 5, 45, 0, 0, 192,
		198, 1, 0, 0, 0, 193, 195, 5, 13, 0, 0, 194, 193, 1, 0, 0, 0, 194, 195,
		1, 0, 0, 0, 195, 196, 1, 0, 0, 0, 196, 199, 5, 10, 0, 0, 197, 199, 5, 0,
		0, 1, 198, 194, 1, 0, 0, 0, 198, 197, 1, 0, 0, 0, 199, 201, 1, 0, 0, 0,
		200, 175, 1, 0, 0, 0, 200, 190, 1, 0, 0, 0, 201, 202, 1, 0, 0, 0, 202,
		203, 6, 3, 0, 0, 203, 8, 1, 0, 0, 0, 204, 205, 5, 46, 0, 0, 205, 206, 7,
		3, 0, 0, 206, 207, 7, 4, 0, 0, 207, 208, 7, 5, 0, 0, 208, 209, 7, 3, 0,
		0, 209, 210, 7, 6, 0, 0, 210, 211, 7, 4, 0, 0, 211, 212, 7, 7, 0, 0, 212,
		213, 7, 8, 0, 0, 213, 10, 1, 0, 0, 0, 214, 215, 5, 46, 0, 0, 215, 216,
		7, 9, 0, 0, 216, 217, 7, 6, 0, 0, 217, 218, 7, 4, 0, 0, 218, 219, 7, 10,
		0, 0, 219, 220, 7, 11, 0, 0, 220, 221, 7, 12, 0, 0, 221, 222, 7, 6, 0,
		0, 222, 12, 1, 0, 0, 0, 223, 224, 5, 46, 0, 0, 224, 225, 7, 6, 0, 0, 225,
		226, 7, 10, 0, 0, 226, 227, 7, 6, 0, 0, 227, 228, 7, 13, 0, 0, 228, 229,
		7, 7, 0, 0, 229, 14, 1, 0, 0, 0, 230, 231, 7, 14, 0, 0, 231, 232, 7, 15,
		0, 0, 232, 233, 7, 16, 0, 0, 233, 234, 7, 9, 0, 0, 234, 235, 7, 6, 0, 0,
		235, 16, 1, 0, 0, 0, 236, 237, 7, 7, 0, 0, 237, 238, 7, 4, 0, 0, 238, 239,
		7, 17, 0, 0, 239, 240, 7, 6, 0, 0, 240, 18, 1, 0, 0, 0, 241, 242, 7, 9,
		0, 0, 242, 243, 7, 6, 0, 0, 243, 244, 7, 16, 0, 0, 244, 245, 7, 6, 0, 0,
		245, 246, 7, 12, 0, 0, 246, 247, 7, 7, 0, 0, 247, 20, 1, 0, 0, 0, 248,
		249, 7, 14, 0, 0, 249, 250, 7, 4, 0, 0, 250, 251, 7, 5, 0, 0, 251, 252,
		7, 18, 0, 0, 252, 22, 1, 0, 0, 0, 253, 254, 7, 19, 0, 0, 254, 255, 7, 20,
		0, 0, 255, 256, 7, 6, 0, 0, 256, 257, 7, 4, 0, 0, 257, 258, 7, 6, 0, 0,
		258, 24, 1, 0, 0, 0, 259, 260, 7, 11, 0, 0, 260, 261, 7, 13, 0, 0, 261,
		262, 7, 7, 0, 0, 262, 263, 7, 6, 0, 0, 263, 264, 7, 4, 0, 0, 264, 265,
		7, 10, 0, 0, 265, 266, 7, 15, 0, 0, 266, 267, 7, 16, 0, 0, 267, 26, 1,
		0, 0, 0, 268, 269, 7, 15, 0, 0, 269, 270, 7, 13, 0, 0, 270, 271, 7, 21,
		0, 0, 271, 28, 1, 0, 0, 0, 272, 273, 7, 11, 0, 0, 273, 274, 7, 13, 0, 0,
		274, 30, 1, 0, 0, 0, 275, 276, 7, 11, 0, 0, 276, 277, 7, 9, 0, 0, 277,
		32, 1, 0, 0, 0, 278, 279, 7, 5, 0, 0, 279, 280, 7, 4, 0, 0, 280, 34, 1,
		0, 0, 0, 281, 282, 7, 15, 0, 0, 282, 283, 7, 9, 0, 0, 283, 36, 1, 0, 0,
		0, 284, 285, 7, 22, 0, 0, 285, 286, 7, 5, 0, 0, 286, 287, 7, 4, 0, 0, 287,
		38, 1, 0, 0, 0, 288, 289, 7, 23, 0, 0, 289, 290, 7, 5, 0, 0, 290, 291,
		7, 11, 0, 0, 291, 292, 7, 13, 0, 0, 292, 40, 1, 0, 0, 0, 293, 294, 7, 16,
		0, 0, 294, 295, 7, 6, 0, 0, 295, 296, 7, 14, 0, 0, 296, 297, 7, 7, 0, 0,
		297, 42, 1, 0, 0, 0, 298, 299, 7, 16, 0, 0, 299, 300, 7, 11, 0, 0, 300,
		301, 7, 24, 0, 0, 301, 302, 7, 6, 0, 0, 302, 44, 1, 0, 0, 0, 303, 304,
		7, 16, 0, 0, 304, 305, 7, 11, 0, 0, 305, 306, 7, 18, 0, 0, 306, 307, 7,
		11, 0, 0, 307, 308, 7, 7, 0, 0, 308, 46, 1, 0, 0, 0, 309, 310, 7, 13, 0,
		0, 310, 311, 7, 5, 0, 0, 311, 312, 7, 7, 0, 0, 312, 48, 1, 0, 0, 0, 313,
		314, 5, 42, 0, 0, 314, 50, 1, 0, 0, 0, 315, 316, 5, 47, 0, 0, 316, 52,
		1, 0, 0, 0, 317, 318, 5, 37, 0, 0, 318, 54, 1, 0, 0, 0, 319, 320, 5, 43,
		0, 0, 320, 56, 1, 0, 0, 0, 321, 322, 5, 45, 0, 0, 322, 58, 1, 0, 0, 0,
		323, 324, 7, 21, 0, 0, 324, 325, 7, 11, 0, 0, 325, 326, 7, 10, 0, 0, 326,
		60, 1, 0, 0, 0, 327, 328, 7, 18, 0, 0, 328, 329, 7, 5, 0, 0, 329, 330,
		7, 21, 0, 0, 330, 62, 1, 0, 0, 0, 331, 332, 5, 61, 0, 0, 332, 64, 1, 0,
		0, 0, 333, 334, 5, 62, 0, 0, 334, 66, 1, 0, 0, 0, 335, 336, 5, 60, 0, 0,
		336, 68, 1, 0, 0, 0, 337, 338, 5, 33, 0, 0, 338, 70, 1, 0, 0, 0, 339, 340,
		5, 126, 0, 0, 340, 72, 1, 0, 0, 0, 341, 342, 5, 124, 0, 0, 342, 74, 1,
		0, 0, 0, 343, 344, 5, 38, 0, 0, 344, 76, 1, 0, 0, 0, 345, 346, 5, 94, 0,
		0, 346, 78, 1, 0, 0, 0, 347, 349, 3, 127, 63, 0, 348, 347, 1, 0, 0, 0,
		349, 350, 1, 0, 0, 0, 350, 348, 1, 0, 0, 0, 350, 351, 1, 0, 0, 0, 351,
		352, 1, 0, 0, 0, 352, 353, 7, 25, 0, 0, 353, 80, 1, 0, 0, 0, 354, 355,
		5, 46, 0, 0, 355, 82, 1, 0, 0, 0, 356, 357, 5, 40, 0, 0, 357, 84, 1, 0,
		0, 0, 358, 359, 5, 41, 0, 0, 359, 86, 1, 0, 0, 0, 360, 361, 5, 44, 0, 0,
		361, 88, 1, 0, 0, 0, 362, 363, 5, 59, 0, 0, 363, 90, 1, 0, 0, 0, 364, 365,
		5, 64, 0, 0, 365, 92, 1, 0, 0, 0, 366, 367, 5, 48, 0, 0, 367, 94, 1, 0,
		0, 0, 368, 369, 5, 49, 0, 0, 369, 96, 1, 0, 0, 0, 370, 371, 5, 50, 0, 0,
		371, 98, 1, 0, 0, 0, 372, 373, 5, 39, 0, 0, 373, 100, 1, 0, 0, 0, 374,
		375, 5, 34, 0, 0, 375, 102, 1, 0, 0, 0, 376, 377, 5, 96, 0, 0, 377, 104,
		1, 0, 0, 0, 378, 379, 5, 58, 0, 0, 379, 106, 1, 0, 0, 0, 380, 381, 3, 125,
		62, 0, 381, 108, 1, 0, 0, 0, 382, 383, 7, 13, 0, 0, 383, 384, 7, 17, 0,
		0, 384, 385, 7, 16, 0, 0, 385, 386, 7, 16, 0, 0, 386, 110, 1, 0, 0, 0,
		387, 388, 5, 92, 0, 0, 388, 389, 7, 13, 0, 0, 389, 112, 1, 0, 0, 0, 390,
		394, 3, 115, 57, 0, 391, 394, 3, 117, 58, 0, 392, 394, 3, 119, 59, 0, 393,
		390, 1, 0, 0, 0, 393, 391, 1, 0, 0, 0, 393, 392, 1, 0, 0, 0, 394, 114,
		1, 0, 0, 0, 395, 403, 5, 34, 0, 0, 396, 397, 5, 92, 0, 0, 397, 402, 9,
		0, 0, 0, 398, 399, 5, 34, 0, 0, 399, 402, 5, 34, 0, 0, 400, 402, 8, 26,
		0, 0, 401, 396, 1, 0, 0, 0, 401, 398, 1, 0, 0, 0, 401, 400, 1, 0, 0, 0,
		402, 405, 1, 0, 0, 0, 403, 401, 1, 0, 0, 0, 403, 404, 1, 0, 0, 0, 404,
		406, 1, 0, 0, 0, 405, 403, 1, 0, 0, 0, 406, 407, 5, 34, 0, 0, 407, 116,
		1, 0, 0, 0, 408, 416, 5, 39, 0, 0, 409, 410, 5, 92, 0, 0, 410, 415, 9,
		0, 0, 0, 411, 412, 5, 39, 0, 0, 412, 415, 5, 39, 0, 0, 413, 415, 8, 27,
		0, 0, 414, 409, 1, 0, 0, 0, 414, 411, 1, 0, 0, 0, 414, 413, 1, 0, 0, 0,
		415, 418, 1, 0, 0, 0, 416, 414, 1, 0, 0, 0, 416, 417, 1, 0, 0, 0, 417,
		419, 1, 0, 0, 0, 418, 416, 1, 0, 0, 0, 419, 420, 5, 39, 0, 0, 420, 118,
		1, 0, 0, 0, 421, 429, 5, 96, 0, 0, 422, 423, 5, 92, 0, 0, 423, 428, 9,
		0, 0, 0, 424, 425, 5, 96, 0, 0, 425, 428, 5, 96, 0, 0, 426, 428, 8, 28,
		0, 0, 427, 422, 1, 0, 0, 0, 427, 424, 1, 0, 0, 0, 427, 426, 1, 0, 0, 0,
		428, 431, 1, 0, 0, 0, 429, 427, 1, 0, 0, 0, 429, 430, 1, 0, 0, 0, 430,
		432, 1, 0, 0, 0, 431, 429, 1, 0, 0, 0, 432, 433, 5, 96, 0, 0, 433, 120,
		1, 0, 0, 0, 434, 435, 7, 3, 0, 0, 435, 436, 7, 4, 0, 0, 436, 437, 7, 5,
		0, 0, 437, 438, 7, 3, 0, 0, 438, 439, 7, 6, 0, 0, 439, 440, 7, 4, 0, 0,
		440, 441, 7, 7, 0, 0, 441, 442, 7, 8, 0, 0, 442, 122, 1, 0, 0, 0, 443,
		444, 7, 9, 0, 0, 444, 445, 7, 6, 0, 0, 445, 446, 7, 4, 0, 0, 446, 447,
		7, 10, 0, 0, 447, 448, 7, 11, 0, 0, 448, 449, 7, 12, 0, 0, 449, 450, 7,
		6, 0, 0, 450, 124, 1, 0, 0, 0, 451, 453, 7, 29, 0, 0, 452, 451, 1, 0, 0,
		0, 453, 456, 1, 0, 0, 0, 454, 455, 1, 0, 0, 0, 454, 452, 1, 0, 0, 0, 455,
		458, 1, 0, 0, 0, 456, 454, 1, 0, 0, 0, 457, 459, 7, 30, 0, 0, 458, 457,
		1, 0, 0, 0, 459, 460, 1, 0, 0, 0, 460, 461, 1, 0, 0, 0, 460, 458, 1, 0,
		0, 0, 461, 465, 1, 0, 0, 0, 462, 464, 7, 29, 0, 0, 463, 462, 1, 0, 0, 0,
		464, 467, 1, 0, 0, 0, 465, 463, 1, 0, 0, 0, 465, 466, 1, 0, 0, 0, 466,
		126, 1, 0, 0, 0, 467, 465, 1, 0, 0, 0, 468, 469, 7, 31, 0, 0, 469, 128,
		1, 0, 0, 0, 470, 472, 3, 127, 63, 0, 471, 470, 1, 0, 0, 0, 472, 473, 1,
		0, 0, 0, 473, 471, 1, 0, 0, 0, 473, 474, 1, 0, 0, 0, 474, 130, 1, 0, 0,
		0, 475, 477, 3, 127, 63, 0, 476, 475, 1, 0, 0, 0, 477, 478, 1, 0, 0, 0,
		478, 476, 1, 0, 0, 0, 478, 479, 1, 0, 0, 0, 479, 481, 1, 0, 0, 0, 480,
		476, 1, 0, 0, 0, 480, 481, 1, 0, 0, 0, 481, 482, 1, 0, 0, 0, 482, 484,
		5, 46, 0, 0, 483, 485, 3, 127, 63, 0, 484, 483, 1, 0, 0, 0, 485, 486, 1,
		0, 0, 0, 486, 484, 1, 0, 0, 0, 486, 487, 1, 0, 0, 0, 487, 132, 1, 0, 0,
		0, 488, 489, 9, 0, 0, 0, 489, 490, 1, 0, 0, 0, 490, 491, 6, 66, 2, 0, 491,
		134, 1, 0, 0, 0, 26, 0, 138, 149, 162, 175, 180, 184, 188, 194, 198, 200,
		350, 393, 401, 403, 414, 416, 427, 429, 454, 460, 465, 473, 478, 480, 486,
		3, 0, 1, 0, 0, 2, 0, 0, 3, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// TsSqlLexerInit initializes any static state used to implement TsSqlLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewTsSqlLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func TsSqlLexerInit() {
	staticData := &tssqllexerLexerStaticData
	staticData.once.Do(tssqllexerLexerInit)
}

// NewTsSqlLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewTsSqlLexer(input antlr.CharStream) *TsSqlLexer {
	TsSqlLexerInit()
	l := new(TsSqlLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &tssqllexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.predictionContextCache)
	l.channelNames = staticData.channelNames
	l.modeNames = staticData.modeNames
	l.RuleNames = staticData.ruleNames
	l.LiteralNames = staticData.literalNames
	l.SymbolicNames = staticData.symbolicNames
	l.GrammarFileName = "TsSqlLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// TsSqlLexer tokens.
const (
	TsSqlLexerSPACE              = 1
	TsSqlLexerSPEC_MYSQL_COMMENT = 2
	TsSqlLexerCOMMENT_INPUT      = 3
	TsSqlLexerLINE_COMMENT       = 4
	TsSqlLexerDOT_PROPERTY       = 5
	TsSqlLexerDOT_SERVICE        = 6
	TsSqlLexerDOT_EVENT          = 7
	TsSqlLexerFALSE              = 8
	TsSqlLexerTRUE               = 9
	TsSqlLexerSELECT             = 10
	TsSqlLexerFROM               = 11
	TsSqlLexerWHERE              = 12
	TsSqlLexerINTERVAL           = 13
	TsSqlLexerAND                = 14
	TsSqlLexerIN                 = 15
	TsSqlLexerIS                 = 16
	TsSqlLexerOR                 = 17
	TsSqlLexerAS                 = 18
	TsSqlLexerXOR                = 19
	TsSqlLexerJOIN               = 20
	TsSqlLexerLEFT               = 21
	TsSqlLexerLIKE               = 22
	TsSqlLexerLIMIT              = 23
	TsSqlLexerNOT                = 24
	TsSqlLexerSTAR               = 25
	TsSqlLexerDIVIDE             = 26
	TsSqlLexerMODULE             = 27
	TsSqlLexerPLUS               = 28
	TsSqlLexerMINUS              = 29
	TsSqlLexerDIV                = 30
	TsSqlLexerMOD                = 31
	TsSqlLexerEQUAL_SYMBOL       = 32
	TsSqlLexerGREATER_SYMBOL     = 33
	TsSqlLexerLESS_SYMBOL        = 34
	TsSqlLexerEXCLAMATION_SYMBOL = 35
	TsSqlLexerBIT_NOT_OP         = 36
	TsSqlLexerBIT_OR_OP          = 37
	TsSqlLexerBIT_AND_OP         = 38
	TsSqlLexerBIT_XOR_OP         = 39
	TsSqlLexerTIME_INTERVAL      = 40
	TsSqlLexerDOT                = 41
	TsSqlLexerLR_BRACKET         = 42
	TsSqlLexerRR_BRACKET         = 43
	TsSqlLexerCOMMA              = 44
	TsSqlLexerSEMI               = 45
	TsSqlLexerAT_SIGN            = 46
	TsSqlLexerZERO_DECIMAL       = 47
	TsSqlLexerONE_DECIMAL        = 48
	TsSqlLexerTWO_DECIMAL        = 49
	TsSqlLexerSINGLE_QUOTE_SYMB  = 50
	TsSqlLexerDOUBLE_QUOTE_SYMB  = 51
	TsSqlLexerREVERSE_QUOTE_SYMB = 52
	TsSqlLexerCOLON_SYMB         = 53
	TsSqlLexerID                 = 54
	TsSqlLexerNULL_LITERAL       = 55
	TsSqlLexerNULL_SPEC_LITERAL  = 56
	TsSqlLexerSTRING_LITERAL     = 57
	TsSqlLexerPROPERTY           = 58
	TsSqlLexerSERVICE            = 59
	TsSqlLexerDECIMAL_LITERAL    = 60
	TsSqlLexerREAL_LITERAL       = 61
	TsSqlLexerERROR_RECONGNIGION = 62
)

// TsSqlLexer escapedChannels.
const (
	TsSqlLexerSQLCOMMENT   = 2
	TsSqlLexerERRORCHANNEL = 3
)
